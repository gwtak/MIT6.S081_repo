1、哪些寄存器包含函数的参数？例如，哪个寄存器在main的printf调用中保留13 ？
答：a0保存函数返回值，a1保存12，a2保存13

2、main的汇编代码中对函数f的调用在哪里？g的调用在哪里？（提示：编译器可以内联函数。）
答：汇编代码如下
    24:	4635                	li	a2,13
    26:	45b1                	li	a1,12
编译器优化，直接返回结果

3、函数printf位于什么地址？
答：汇编代码如下
    000000000000064a <printf>:
printf位于0x000000000000064a

4、从main中jalr到printf后，寄存器ra是什么值？
答：pc指向函数返回后的地址0x38

5、运行以下代码：

    unsigned int i = 0x00646c72;
    printf("H%x Wo%s", 57616, &i);

输出是什么？ 这是一个将字节映射为字符的ASCII表。
输出取决于RISC-V是低位优先的事实。如果RISC-V改用big-endian，那么您要设置什么i才能产生相同的输出？您需要更改 57616为其他值吗？
这是有关小端序和大端序的描述，是一种异想天开的描述。
答：57616=0xe110，0x00646c72分为0、100、108、114，对应ASCII码NULL、d、l、r
    由于小端序原因，低字节在低地址，所以显示He110 World 
    改用大端序，57616不做改变，i变为0x726c6400


6、在下面的代码中，之后将要打印 'y='什么？（注意：答案不是一个特定的值。）为什么会发生这种情况？
    printf（“ x =％dy =％d”，3）;
答：产生未定义行为，y会等于随机数
